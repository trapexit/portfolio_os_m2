#####################################
##
##      @(#) CompareDSVersions 95/11/22 1.2
##
#####################################
#
#   File:       CompareM2DSVersions
#
#	Contains:	Script to compare two versions of Data Streaming sources
#
#	Usage:		CompareM2DSVersions {Release1} {Release2}
#
#####################################
#
#	Determine the root folder names. 
#
	If "{1}" == ""
		Set DSRoot1 "`getfilename -q -d -m "Select 1st DS release dir"`"
	Else
		Set DSRoot1 "{1}"
	End

	If "{2}" == ""
		Set DSRoot2 "`getfilename -q -d -m "Select 2nd DS release dir"`"
	Else
		Set DSRoot2 "{2}"
	End

	# Get the releases
	(Evaluate "{DSRoot1}" =~ /Å:(M2Å)¨1:/ ) ·· Dev:Null
	set RelDir1 "{¨1}" 
	if (!`evaluate "{RelDir1}" =~ /ÅM2Å/`)
		Echo "###Error -- This is not an M2 Portfolio Version!"
		Exit 1
	end
	(Evaluate "{DSRoot1}" =~ /(Å)¨1:Streaming:Å/ ) ·· Dev:Null
	set 3DODir "{¨1}" 
	
	(Evaluate "{DSRoot2}" =~ /Å:(M2Å)¨2:/ ) ·· Dev:Null
	set RelDir2 "{¨2}" 
	if (!`evaluate "{RelDir2}" =~ /ÅM2Å/`)
		Echo "###Error -- This is not an M2 Portfolio Version!"
		Exit 1
	end


	Set SaveExit {Exit}
	Set Exit 0

	Set FilesDifferent 0
#	Set MonitorXY	"-b 1000 760"		# for 19 inch monitor
	Set MonitorXY	"-16"

	Echo "# Comparing DS versions from:"
	Echo "# Folder 1: {DSRoot1}"
	Echo "# Folder 2: {DSRoot2}"

#
#   Compare datastream, dsutils, and subscribers library files
#
    Echo "# Comparing DataStream"
 
    Set DSFolder1   "{DSRoot1}Libs:DataStream:"
    Set DSFolder2   "{DSRoot2}Libs:DataStream:"
 
    For file in `Files -t TEXT "{DSFolder1}"`
        If `Exists "{DSFolder2}{file}"` != ""
            Equal -d -q "{DSFolder1}{file}" "{DSFolder2}{file}" 
            If {Status} != 0 
                Echo CompareFiles {MonitorXY} 6"{DSFolder1}{file}6" 6"{DSFolder2}{file}6" 
                Set FilesDifferent `Evaluate {FilesDifferent}+1`
            End
        Else
            Echo "{DSFolder2}{file} not found in {DSFolder1}"
            Set FilesDifferent `Evaluate {FilesDifferent}+1`
        End
    End
 
#
#	Compare DSUtils
#
	Echo "#	Comparing DSUtils"

	Set DSFolder1	"{DSRoot1}Libs:DSUtils:"
	Set DSFolder2	"{DSRoot2}Libs:DSUtils:"

	For file in `Files -t TEXT "{DSFolder1}"`
		If `Exists "{DSFolder2}{file}"` != ""
			Equal -d -q "{DSFolder1}{file}" "{DSFolder2}{file}" 
			If {Status} != 0 
				Echo CompareFiles {MonitorXY} ¶"{DSFolder1}{file}¶" ¶"{DSFolder2}{file}¶" 
				Set FilesDifferent `Evaluate {FilesDifferent}+1`
			End
		Else
			Echo "{DSFolder2}{file} not found in {DSFolder1}"
			Set FilesDifferent `Evaluate {FilesDifferent}+1`
		End
	End

#
#	Compare subscribers
#
	Echo "#	Comparing Subscribers"

	Set DSFolder1	"{DSRoot1}Libs:Subscribers:"
	Set DSFolder2	"{DSRoot2}Libs:Subscribers:"

	For SubsDir in `Files -d "{DSFolder1}"`

		# Get the Subscriber name
		(Evaluate "{SubsDir}" =~ /Å:(Å)¨1:/ ) ·· Dev:Null
		Set SubsName "{¨1}"
	
		if ({SubsName} == Objects)
			continue
		End
		
		Echo "#	Comparing {SubsName}"

		For file in `Files -t TEXT "{DSFolder1}{SubsName}:"`

			If `Exists "{DSFolder2}{SubsName}:{file}"` != ""
				Equal -d -q "{DSFolder1}{SubsName}:{file}" "{DSFolder2}{SubsName}:{file}" 
				If {Status} != 0 
					Echo CompareFiles {MonitorXY} ¶"{DSFolder1}{SubsName}:{file}¶" ¶"{DSFolder2}{SubsName}:{file}¶" 
					Set FilesDifferent `Evaluate {FilesDifferent}+1`
				End
			Else
				Echo "{DSFolder2}{file} not found in {DSFolder1}"
				Set FilesDifferent `Evaluate {FilesDifferent}+1`
			End
		End
	End

#
#	Compare stream tool files
#
	Echo "#	Comparing StreamTools"

	Set DSFolder1	"{DSRoot1}StreamTools:Source"
	Set DSFolder2	"{DSRoot2}StreamTools:Source"

	For ToolDir in `Files -d "{DSFolder1}"`
		Echo "#		{ToolDir}"
		For file in `Files -t TEXT "{DSFolder1}{ToolDir}"`
			If `Exists "{DSFolder2}{ToolDir}{file}"` != ""
			   Equal -d -q "{DSFolder1}{ToolDir}{file}" "{DSFolder2}{ToolDir}{file}" 
				If {Status} != 0 
					Echo CompareFiles {MonitorXY} ¶"{DSFolder1}{ToolDir}{file}¶" ¶"{DSFolder2}{ToolDir}{file}¶" 
					Set FilesDifferent `Evaluate {FilesDifferent}+1`
				End
			Else
				Echo "{DSFolder2}{ToolDir}{file} not found in {DSFolder1}{ToolDir}"
				Set FilesDifferent `Evaluate {FilesDifferent}+1`
			End
		End
	End


#
#	Compare Examples files
#
	Echo "#	Comparing Examples"

	Set DSExample1	"{3DODir}:Examples:{RelDir1}:Streaming"
	Set DSExample2	"{3DODir}:Examples:{RelDir2}:Streaming"

	For ExampleDir in `Files -d "{DSExample1}"`
		Echo "#		{ExampleDir}"
		For file in `Files -t TEXT "{DSExample1}{ExampleDir}"`
			If `Exists "{DSExample2}{ExampleDir}{file}"` != ""
			   Equal -d -q "{DSExample1}{ExampleDir}{file}" "{DSExample2}{ExampleDir}{file}" 
				If {Status} != 0 
					Echo CompareFiles {MonitorXY} ¶"{DSExample1}{ExampleDir}{file}¶" ¶"{DSExample2}{ExampleDir}{file}¶" 
					Set FilesDifferent `Evaluate {FilesDifferent}+1`
				End
			Else
				Echo "{DSExample2}{ExampleDir}{file} not found in {DSExample1}{ExampleDir}"
				Set FilesDifferent `Evaluate {FilesDifferent}+1`
			End
		End
	End


#
#	Restore and undefine shell variables
#
	If {FilesDifferent} == 0
		Echo "#	No differences found!"
	Else If {FilesDifferent} == 1
		Echo "#	1 file was different"
	Else
		Echo "#	{FilesDifferent} files were different"
	End

	Set Exit {SaveExit}
	Unset DSFolder1 DSFolder2 DSRoot1 DSRoot2 FilesDifferent DSExample1 DSExample2 3DODir RelDir1 RelDir2
	Beep
