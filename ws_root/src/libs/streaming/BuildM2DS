#####################################
##
##	@(#) BuildM2DS 96/04/05 1.6
##
#####################################
#
#   File:       BuildM2DS
#
#	Contains:	Script to build all of the data stream components:
#						libDS.a				data streamer
#						libSubscriber.a		Subscriber library
#						libDSUtils.a		datastream utils
#
#	Usage:		BuildM2DS { clean | "" } { root folder | "" }
#
#					"clean"		deletes all object files before
#								building everything
#
#####################################
#
	set OldDirectory "`directory`"

#	Determine the datastream root folder name. May be specified as
#	arg 2 on the command line, or will be prompted for if omitted.
#
if "{2}" == ""
	set DSFolder "`getfilename -q -d -m "Select release directory"`"
else
	set DSFolder "{2}"
end
#
#	Delete all object files for a "clean" build completely from source
#
If "{1}" == "clean"
	Begin
		# Save state of {Exit}
		set saveExit {Exit}
		set Exit 0

		# Delete all subscriber object files
		delete -i "{DSFolder}"Libs:Subscribers:libSubscriber.a

		delete -i "{DSFolder}"Libs:Subscribers:Objects:Å

		# Delete all datastream and dsutils object files
		delete -i "{DSFolder}"Libs:DSUtils:libDSUtils.a
		delete -i "{DSFolder}"Libs:DataStream:libDS.a

		delete -i "{DSFolder}"Libs:DataStream:Objects:Å
		delete -i "{DSFolder}"Libs:DSUtils:Objects:Å

		# Restore the state of {Exit}
		set Exit {saveExit}

	End ·· Dev:Null
End

#
# Create the Object Directories if they don't exist
#
if !(`Exists -d "{DSFolder}Libs:DataStream:Objects:"`)
	newfolder "{DSFolder}Libs:DataStream:Objects:"
end

if !(`Exists -d "{DSFolder}Libs:DSUtils:Objects:"`)
	newfolder "{DSFolder}Libs:DSUtils:Objects:"
end

if !(`Exists -d "{DSFolder}Libs:Subscribers:Objects:"`)
	newfolder "{DSFolder}Libs:Subscribers:Objects:"
end

#
# Build the library of subscribers
#
	echo "Building libSubscriber.a ..."
	directory "{DSFolder}"Libs:Subscribers:


	execute BuildSubscriberLib


#
# Build data acquisition and the data streamer
#
	echo "Building libDSUtils.a ..."
	directory "{DSFolder}"Libs:DSUtils:
	make -f libDSUtils.a.make libDSUtils.a > libDSUtils.a.makeout
	libDSUtils.a.makeout
	delete -i libDSUtils.a.makeout
	
	echo "Building libds.a ..."
	directory "{DSFolder}"Libs:DataStream:
	make -f libDS.a.make libds.a > libDS.a.makeout
	libDS.a.makeout

	delete -i libDS.a.makeout

	directory "{OldDirectory}"
#
# Say we're finished
#
	echo "BuildDS finished."
	Beep

