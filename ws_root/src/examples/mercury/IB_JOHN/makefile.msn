# Makefile generated by zooMaker for Microsoft NMake
#
# Requires the following environment variables to be set:
#	THDO_DRV	The drive the releases are located.
#	THDO		The directory containing the releases.
#	THDO_RELEASE	The current release to use.
#	THDO_PROJECT	The name of the user's current project.
#
# The 3DO Company

.SILENT :

#------------------------------------------------------------------------------
Target	= $(THDO_PROJECT)

3DO	= $(THDO_DRV)$(THDO)
OS	= $(3DO)\$(THDO_RELEASE)
Mercury	= $(3DO)\$(THDO_RELEASE)\Examples\Mercury

#------------------------------------------------------------------------------
C_Files = \
	AM_Anim.c \
	AM_Model.c \
	bsdf_read.c \
	controller.c \
	Copy of fight.c \
	fight.c \
	filepod.c \
	graphicsenv.c \
	mainloop.c \
	tex_read.c 

#------------------------------------------------------------------------------
S_Files = \

#------------------------------------------------------------------------------
Libs	= \
	-L$(OS)\libs\default \
	-llibmercury_setup.a \
	-llibmercury1.a \
	-llibmercury2.a \
	-llibmercury3.a \
	-llibmercury44.a \
	-llibmercury_utils.a \
	-lclt \
	-lspmath \
	-leventbroker \
	-lc 

#------------------------------------------------------------------------------
Modules = \
	$(OS)\vectors\default\audio \
	$(OS)\vectors\default\font \
	$(OS)\vectors\default\graphics \
	$(OS)\vectors\default\gstate \
	$(OS)\vectors\default\iff \
	$(OS)\vectors\default\audiopatch \
	$(OS)\vectors\default\kernel \
	$(OS)\vectors\default\filesystem 

#------------------------------------------------------------------------------
Objects = \
	$(C_Files:.c=.o) \
	$(S_Files:.s=.o) 

#------------------------------------------------------------------------------
Assembler = ppcas 
Assembler_Options = \
	-I$(Mercury)\include \
	-I$(OS)\includes \

#------------------------------------------------------------------------------
Compiler = dcc 
Compiler_Options = \
	-I..\extras \
	-I$(Mercury)\include \
	-I$(OS)\includes.dev \
	-DNUPUPSIM \
	-D__3DO__ \
	-DOS_3DO=2 \
	-XO \
	-Xinline=5 \
	-Xtest-at-bottom \
	-Xunroll=1 \
	-Xstring-align=1 \
	-Ximport 

#------------------------------------------------------------------------------
Archive = dar 
Archive_Options = \
	\cq

#------------------------------------------------------------------------------
Linker = link3do 
Linker_Options = \
	-D \
	-r \
	-s \
	-Htime=now \
	-Hsubsys=1 \
	-Hversion=30 \
	-Hrevision=0 \
	-Hosversion=30 \
	-Hosrevision=0 \
	-Hname=$(Target) \
	-Hstack=32768 \
	-Htype=5 \
	-Hflags=0 

#------------------------------------------------------------------------------
FTP = cutftp32 
FTP_Options = \

#------------------------------------------------------------------------------
# Explicit Rules
#
$(Target) : $(Objects)
	@echo Linking ...
	$(Linker) $(Linker_Options) -o $(Target) $(Objects) $(OS)\libs\default\M_SetupForceLink.o $(Modules) $(Libs)
	@echo Copying executable to remote ...
	copy $(Target) $(OS)\build\remote\$(Target) /Q
	@echo Completed $(Target).
	
.PHONY : run
run : $(Target)
@echo M2 Execute ...
	$(OS)\build\m2 hardreset
	copy $(Target) $(OS)\build\remote\$(Target) /Q
	$(OS)/build/m2 cd /remote/$(Target)
	$(OS)/build/m2 $(Target)
	@echo Completed run.
	
.PHONY : clean
clean :
	@echo Cleaning ...
	-rm $(Objects)
	-rm $(Target)
	@echo Completed Cleaning.

#------------------------------------------------------------------------------
# Implicit Rules
#
.c.o:
	@echo Compiling ... $<
	$(Compiler) $(Compiler_Options) -c $< -o $@

.s.o:
	@echo Assembling ... $<
	$(Assembler) $(Assembler_Options) $< -o $@

#------------------------------------------------------------------------------
# End of File
