we1xydGYxXG1hY1xkZWZmMiB7XGZvbnR0Ymx7XGYwXGZzd2lzcyBDaGljYWdvO317
wXGYyXGZyb21hbiBOZXcgWW9yazt9e1xmM1xmc3dpc3MgR2VuZXZhO317XGY0XGZt
wb2Rlcm4gTW9uYWNvO317XGYxNlxmbmlsIFBhbGF0aW5vO317XGYyMFxmcm9tYW4g
wVGltZXM7fXtcZjIxXGZzd2lzcyBIZWx2ZXRpY2E7fXtcZjIyXGZtb2Rlcm4gQ291
wcmllcjt9e1xmMjNcZnRlY2ggU3ltYm9sO317XGYyMDAwXGZuaWwgU2tpYTt9DXtc
wZjIwMTFcZm5pbCBBcHBsZSBDaGFuY2VyeTt9e1xmMjAxM1xmbmlsIEhvZWZsZXIg
wVGV4dDt9e1xmMjAxOFxmbmlsIEhvZWZsZXIgVGV4dCBPcm5hbWVudHM7fXtcZjI1
wMTVcZm5pbCBNVCBFeHRyYTt9e1xmMjY0NVxmbmlsIENhcm9sZXNDaHVuazt9e1xm
wNjk2M1xmbmlsIFBlcmZQcmludEljb25zO317XGY2OTY0XGZuaWwgUGVyZlByaW50
wR2VuZXZhO317XGY2OTY1XGZuaWwgTXVzaWNmb250O317XGY2OTY2XGZuaWwgY29t
wcHV0aWxzO30Ne1xmNjk2N1xmbmlsIFNvbmF0YTt9e1xmMTUwOTBcZm5pbCBUZWt0
wb24gUGx1cyBSZWd1bGFyO319e1xjb2xvcnRibFxyZWQwXGdyZWVuMFxibHVlMDtc
wcmVkMFxncmVlbjBcYmx1ZTI1NTtccmVkMFxncmVlbjI1NVxibHVlMjU1O1xyZWQw
wXGdyZWVuMjU1XGJsdWUwO1xyZWQyNTVcZ3JlZW4wXGJsdWUyNTU7XHJlZDI1NVxn
wcmVlbjBcYmx1ZTA7XHJlZDI1NVxncmVlbjI1NVxibHVlMDtccmVkMjU1XGdyZWVu
wMjU1XGJsdWUyNTU7fQ17XHN0eWxlc2hlZXR7XGYxNiBcc2Jhc2Vkb24yMjJcc25l
weHQwIE5vcm1hbDt9e1xzMiBcYlxmMTZcZnMyOFx1bCBcc2Jhc2Vkb24wXHNuZXh0
wMiBEaXJlY3Rvcnk7fXtcczNcbGkzNjAgXGJcZjE2XGZzMjggXHNiYXNlZG9uMFxz
wbmV4dDMgUHJvZ3JhbSBOYW1lO317XHM0XGxpNzIwIFxmMTYgXHNiYXNlZG9uMFxz
wbmV4dDQgRGVzY3JpcHRpb247fX17XGluZm97XHRpdGxlIDFSZWFkTWUucnRmfXtc
wc3ViamVjdCBBdWRpbyBleGFtcGxlcyBSZWFkTWUNfXtcYXV0aG9yIEpvaG4gQnly
wZH19XHdpZG93Y3RybFxmdG5ialxmcmFjd2lkdGggXHNlY3RkIFxzYmtub25lXGxp
wbmVtb2QwXGxpbmV4MFxjb2xzMVxlbmRuaGVyZSBccGFyZFxwbGFpbiBcZjE2IDFS
wZWFkTWUucnRmL3R4dFxwYXIgDURlY2VtYmVyIDEzLCAxOTk0XHBhciANRXhhbXBs
wZXM6QXVkaW9ccGFyIA1ccGFyIA1UaGlzIGlzIHRoZSBSZWFkTWUgZmlsZSBmb3Ig
wdGhlIEF1ZGlvIEV4YW1wbGVzIGZvbGRlci4gIEl0IGJyaWVmbHkgZGVzY3JpYmVz
wIGVhY2ggcHJvZ3JhbSBtYWludGFpbmVkIGluIHRoZSBBdWRpbyBmb2xkZXIuICBG
wb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBhIHNwZWNpZmljIHByb2dyYW0sIHNlZSB0
waGUgRXhhbXBsZXMgZG9jdW1lbnRhdGlvbiwgb3Igc2VlIHRoZSBoZWFkZXIgZm9y
wIHRoZSBzb3VyY2UgY29kZSBpbiBxdWVzdGlvbi5ccGFyIA1ccGFyIA17XGIgQWJv
wdXQgdGhlIEFJRkYgU2FtcGxlcyBmb2xkZXJ9XHBhciANXHBhciANTWFueSBvZiB0
waGUgZXhhbXBsZXMgaW4gdGhlIEF1ZGlvIGZvbGRlciByZXF1aXJlIHNvdW5kIHNh
wbXBsZXMgZnJvbSB0aGUgXGxkYmxxdW90ZSBBSUZGIFNhbXBsZXNccmRibHF1b3Rl
wIA0gZm9sZGVyIGluIG9yZGVyIHRvIHJ1bi4gIFRoaXMgZm9sZGVyIHdhcyBtb3N0
wIHJlY2VudGx5IGRpc3RyaWJ1dGVkIG9uIHRoZSBUb29sa2l0IDEuNSBDRC4gIFRv
wIHVzZSB0aGVzZSBzYW1wbGVzLCBpdCBpcyBuZWNlc3NhcnkgdG8gY29weSB0aGUg
wQUlGRiBTYW1wbGVzIGZvbGRlciBmcm9tIHlvdXIgVG9vbGtpdCBDRCB0byB5b3Vy
wIHdvcmtpbmcgL3JlbW90ZSBmb2xkZXIuICBccGFyIA1ccGFyIA1GaXJzdCwgZHJh
wZyB0aGUgXGxkYmxxdW90ZSBBSUZGIFNhbXBsZXNccmRibHF1b3RlICBmb2xkZXIg
wdG8gdGhlIFxsZGJscXVvdGUgcmVtb3RlXHJkYmxxdW90ZSAgZm9sZGVyIG9uIHlv
wdXIgaGFyZCBkaXNrLiAgQmUgcGF0aWVudCwgYXMgdGhlIEFJRkYgU2FtcGxlcyBm
wb2xkZXIgaXMgdmVyeSBsYXJnZS4gIFRoZW4sIHJlbmFtZSB0aGUgY29waWVkIFxs
wZGJscXVvdGUgQUlGRiBTYW1wbGVzXHJkYmxxdW90ZSAgZm9sZGVyIHRvICANXGxk
wYmxxdW90ZSBhaWZmXHJkYmxxdW90ZSAgLiAgVG8gaW5mb3JtIHRoZSAzRE8gRGVi
wdWdnZXIgYWJvdXQgdGhlIGxvY2F0aW9uIG9mIHRoZSBBSUZGIHNhbXBsZXMsIHR5
wcGUgdGhlIGZvbGxvd2luZyBsaW5lIGluIGF0IHRoZSB7XGYyMiAzRE8tPn0gcHJv
wbXB0OlxwYXIgDVxwYXIgDVxwYXJkIFxsaTcyMCB7XGYyMiBhbGlhcyBzYW1wbGVz
wIC9yZW1vdGUvYWlmZlxwYXIgDVxwYXIgDX1ccGFyZCBZb3UgY2FuIG5vdyBtb3Zl
wIHRoZSBhdWRpbyBleGFtcGxlIGV4ZWN1dGFibGVzIGFuZCBzdXBwb3J0IGZpbGVz
wIGludG8gdGhlIC9yZW1vdGUgZm9sZGVyLCBhbmQgcnVuIHRoZW0uICBFYWNoIG9m
wIHRoZSBleGFtcGxlIHByb2dyYW1zIHdpbGwgYXR0ZW1wdCB0byBsb2FkIHRoZSBB
wSUZGIHNhbXBsZXMgaXQgbmVlZHMgdmlhIHRoZSBhbGlhcyBcbGRibHF1b3RlICRz
wYW1wbGVzXHJkYmxxdW90ZSAuXHBhciANXHBhciANVG8gYXV0b21hdGUgdGhpcyBw
wcm9jZXNzLCBpbnNlcnQgdGhhdCBsaW5lIGludG8gdGhlIEFwcFN0YXJ0dXAgZmls
wZSwgd2hpY2ggcmVzaWRlcyBpbiB5b3VyIHJlbW90ZSBmb2xkZXIuXHBhciANXHBh
wciANe1xiIEFib3V0IHRoZSBBdWRpby5tYWtlIG1ha2VmaWxlfVxwYXIgDVxwYXIg
wDVRvIGNvbXBpbGUgYWxsIG9mIHRoZSBhdWRpbyBleGFtcGxlcywgeW91IGNhbiB1
wc2UgdGhlIEF1ZGlvLm1ha2UgZmlsZS4gIENvcHkgdGhlIEV4YW1wbGVzOkF1ZGlv
wIGZvbGRlciB0byB5b3VyIGhhcmQgZHJpdmUuICBUaGVuLCBzdGFydCBNUFcgYW5k
wIHVzZSB0aGUge1xiIFNldCBEaXJlY3RvcnkuLi59DSBjb21tYW5kIHRvIHNldCB0
waGUgY3VycmVudCBkaXJlY3RvcnkgdG8gdGhlIG5ldyBFeGFtcGxlczpBdWRpbyBm
wb2xkZXIuICBGaW5hbGx5LCB1c2UgdGhlIHtcYiBCdWlsZC4uLn0gY29tbWFuZCB3
waXRoIHtcZjIyIEF1ZGlvfSBhcyB0aGUgbWFrZWZpbGUgbmFtZS4gIFRoZSBtYWtl
wZmlsZSB3aWxsIHBsYXkgYSB0dW5lIHdoZW4gdGhlIG1ha2UgaXMgY29tcGxldGVk
wLlxwYXIgDVxwYXIgDXtcYiBUYWxraW5nIHRvIHVzfVxwYXIgDVxwYXIgDVdlXHJx
wdW90ZSByZSBhbHdheXMgaW50ZXJlc3RlZCBpbiBpbXByb3Zpbmcgb3VyIGV4YW1w
wbGVzLiAgSWYgeW91IGhhdmUgc3BlY2lmaWMgY29tbWVudHMgb3IgcXVlc3Rpb25z
wIGFib3V0IHRoZXNlIGV4YW1wbGUgcHJvZ3JhbXMsIGEgZ29vZCB3YXkgdG8gY29u
wdGFjdCB1cyBpcyB2aWEgM0RPXHJxdW90ZSBzIEluZm9TZXJ2ZXIgQkJTLlxwYXIg
wDVxwYXIgDVxwYXJkXHBsYWluIFxzMiBcYlxmMTZcZnMyOFx1bCBFeGFtcGxlczpB
wdWRpb1xwYXIgDVxwYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxhaW4gXHMz
wXGxpMzYwIFxiXGYxNlxmczI4IGJlZXBccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxw
wYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2IFBsYXkgc3ludGhldGljIHdh
wdmVmb3JtIGZvciAyIHNlY29uZHMuIFRoaXMgZGVtb25zdHJhdGVzIGxvYWRpbmcs
wIGNvbm5lY3RpbmcgYW5kIHBsYXlpbmcgaW5zdHJ1bWVudHMuIEl0IGFsc28gZGVt
wb25zdHJhdGVzIHVzZSBvZiB0aGUgYXVkaW8gdGltZXIgZm9yIHRpbWUgZGVsYXlz
wLlxwYXIgDVxwYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxhaW4gXHMzXGxp
wMzYwIFxiXGYxNlxmczI4IGNhcHR1cmVfYXVkaW8gWzxudW0gZnJhbWVzPiBbPGRl
wc3QgZmlsZT5dXVxwYXIgDVxwYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxh
waW4gXHM0XGxpNzIwIFxmMTYgVGhpcyBwcm9ncmFtIGNhcHR1cmVzIHRoZSBvdXRw
wdXQgZnJvbSB0aGUgRFNQIGludG8gYSBmaWxlIG9uIHRoZSBkZXZlbG9wbWVudCBz
wdGF0aW9uJ3MgZmlsZXN5c3RlbS4gSXQgY2FuIGJlIHVzZWQgdG8gY2hlY2sgdGhl
wIHNvdW5kIG91dHB1dCBvZiB5b3VyIHByb2dyYW0gYXQgaW1wb3J0YW50IHBvaW50
wcy5ccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBsYWluIFxzM1xs
waTM2MCBcYlxmMTZcZnMyOCBtaW5tYXhfYXVkaW9ccGFyIA1ccGFyZFxwbGFpbiBc
wZjE2IFxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2IFRoaXMgcHJvZ3Jh
wbSBzYW1wbGVzIHRoZSBvdXRwdXQgb2YgdGhlIERTUCBhbmQgcmV0dXJucyB0aGUg
wbWF4aW11bSBhbmQgbWluaW11bSBvdXRwdXQgdmFsdWVzIG9mIHRoZSBEU1AuIFlv
wdSBjYW4gdXNlIG1pbm1heF9hdWRpbyB0byBjaGVjayB0aGF0IHlvdXIgcHJvZ3Jh
wbSBvdXRwdXRzIHJlYXNvbmFibGUsIG5vbi1jbGlwcGluZyBsZXZlbHMgb2YgYXVk
waW8uXHBhciANXHBhciANXHBhcmRccGxhaW4gXHMzXGxpMzYwIFxiXGYxNlxmczI4
wIHBsYXltZiA8TUlESSBmaWxlPiA8UElNYXAgZmlsZT4gWzxudW0gcmVwZWF0cz5d
wXHBhciANXHBhcmRccGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFpbiBcczRcbGk3
wMjAgXGYxNiBUaGlzIHNhbXBsZSBhcHBsaWNhdGlvbiBsb2FkDXMgYSBzdGFuZGFy
wZCBNSURJIGZvcm1hdCBmaWxlLCBsb2FkcyBpbnN0cnVtZW50cyBhbmQgQUlGRiBz
wYW1wbGVzIGRlc2NyaWJlZCBpbiBhIFBJTWFwIGZpbGUsIGFuZCBwbGF5cyB0aGUg
wTUlESSBmaWxlIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIHRpbWVzLiBJdCBkZW1v
wbnN0cmF0ZXMgdXNhZ2Ugb2YgdGhlIEp1Z2dsZXIgYW5kIHRoZSBzY29yZSBwbGF5
waW5nIHJvdXRpbmVzLlxwYXIgDVxwYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRc
wcGxhaW4gXHMzXGxpMzYwIFxiXGYxNlxmczI4IHBsYXlzYW1wbGUgWzxzYW1wbGUg
wZmlsZT4gWzxyYXRlPl1dXHBhciANXHBhcmRccGxhaW4gXGYxNiBccGFyIA1ccGFy
wZFxwbGFpbiBcczRcbGk3MjAgXGYxNiBUaGlzIHByb2dyYW0gc2hvd3MgaG93IHRv
wIGxvYWQgYW4gQUlGRiBzYW1wbGUgZmlsZSBhbmQgcGxheSBpdCB1c2luZyB0aGUg
wY29udHJvbCBwYWQuIFVzZSB0aGUgQSBidXR0b24gdG8gc3RhcnQgdGhlIHNhbXBs
wZSwgdGhlIEIgYnV0dG9uIHRvIHJlbGVhc2UgdGhlIHNhbXBsZSwgYW5kIHRoZSBD
wIGJ1dHRvbiB0byBzdG9wIHRoZSBzYW1wbGUuIFRoZSBYIGJ1dHRvbiBxdWl0cyB0
waGUgcHJvZ3JhbS4NXHBhciANXHBhcmRccGxhaW4gXHMzXGxpMzYwIFxiXGYxNlxm
wczI4IFxwYXIgDXBsYXlzb3VuZGZpbGUgPHNhbXBsZSBmaWxlPi4uLlxwYXIgDVxw
wYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxhaW4gXHM0XGxpNzIwIFxmMTYg
wQ2FsbHMgU291bmRGaWxlUGxheWVyIHJvdXRpbmVzIHRvIHBsYXkgb25lIG9yIG1v
wcmUgQUlGRiBmaWxlcy5ccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJk
wXHBsYWluIFxzM1xsaTM2MCBcYlxmMTZcZnMyOCBzaW1wbGVfZW52ZWxvcGVccGFy
wIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBc
wZjE2IFNpbXBsZSBkZW1vbnN0cmF0aW9uIG9mIGFuIGVudmVsb3BlIHVzZWQgdG8g
wcmFtcCBhbXBsaXR1ZGUgb2YgYSBzYXd0b290aCB3YXZlZm9ybS4gQSAzLXBvaW50
wIGVudmVsb3BlIGlzIHVzZWQgdG8NIHByb3ZpZGUgYSByYW1wIHVwIHRvIGEgc3Bl
wY2lmaWVkIGFtcGxpdHVkZSBhdCB0aGUgc3RhcnQgb2YgdGhlIHNvdW5kIGFuZCBh
wIHJhbXAgZG93biB3aGVuIHRoZSBzb3VuZCBpcyB0byBiZSBzdG9wcGVkLiBUaGlz
wIGlzIG9uZSB0ZWNobmlxdWUgdG8gYXZvaWQgYXVkaW8gcG9wcyBhdCB0aGUgc3Rh
wcnQgYW5kIGVuZCBvZiBzb3VuZHMuXHBhciANXHBhcmRccGxhaW4gXGYxNiBccGFy
wIA1ccGFyZFxwbGFpbiBcczNcbGkzNjAgXGJcZjE2XGZzMjggc3Bvb2xzb3VuZGZp
wbGUgPHNvdW5kIGZpbGU+IFs8bnVtIHJlcGVhdHM+XVxwYXIgDVxwYXJkXHBsYWlu
wIFxmMTYgXHBhciANXHBhcmRccGxhaW4gXHM0XGxpNzIwIFxmMTYgUGxheXMgYW4g
wQUlGRiBzb3VuZCBmaWxlIHVzaW5nIGEgdGhyZWFkIHRvIG1hbmFnZSBwbGF5YmFj
way5ccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBsYWluIFxzM1xs
waTM2MCBcYlxmMTZcZnMyOCB0YV9hdHRhY2hccGFyIA1ccGFyZFxwbGFpbiBcZjE2
wIFxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2IENyZWF0ZXMgYSBwYWly
wIG9mIHNvZnR3YXJlLWdlbmVyYXRlZCBzYW1wbGVzIGFuZCBhdHRhY2hlcyB0aGVt
wIHRvIGEgc2FtcGxlIHBsYXllciBpbnN0cnVtZW50LiBUaGUgYXR0YWNobWVudHMg
wYXJlIHRoZW4gbGlua2VkIHRvIG9uZSBhbm90aGVyIHVzaW5nIExpbmtBdHRhY2ht
wZW50KCkgc3VjaCB0aGF0IHRoZXkgcGxheSBpbiBhIGxvb3AuXHBhciANXHBhcmRc
wcGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFpbiBcczNcbGkzNjAgXGJcZjE2XGZz
wMjggdGFfY3VzdG9tZGVsYXkgWzxzYW1wbGUgZmlsZT4gWzxkZWxheSB0aWNrcz5d
wXVxwYXIgDVxwYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxhaW4gXHM0XGxp
wNzIwIFxmMTYgDVRoaXMgcHJvZ3JhbSBkZW1vbnN0cmF0ZXMgaG93IHRvIGNyZWF0
wZSBhbmQgdXNlIGEgZGVsYXkgbGluZSB0byBnZXQgcmVhbC10aW1lIGVjaG8gZWZm
wZWN0cyBpbiB5b3VyIHByb2dyYW0uICBJdCBsb2FkcyB0aGUgc3BlY2lmaWVkIEFJ
wRkYgZmlsZSBhbmQgcGxheXMgaXQgaW50byBhIGRlbGF5IGxpbmUuIEJ5IHR3ZWFr
waW5nIHRoZSBrbm9icyBvbiB0aGUgb3V0cHV0IG1peGVyLCB5b3UgY2FuIGNvbnRy
wb2wgdGhlIG1peCBvZiBkZWxheSBzb3VuZCANdmVyc3VzIG9yaWdpbmFsIHNvdW5k
wLCBhbmQgdGhlIHNwZWVkIGF0IHdoaWNoIHRoZSBlY2hvIHdpbGwgZGllIGRvd24u
wXHBhciANXHBhcmRccGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFpbiBcczNcbGkz
wNjAgXGJcZjE2XGZzMjggdGFfZW52ZWxvcGUgWzx0ZXN0IGNvZGU+XVxwYXIgDVxw
wYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxhaW4gXHM0XGxpNzIwIFxmMTYg
wRGVtb25zdHJhdGVzIGNyZWF0aW5nLCBhdHRhY2hpbmcsIGFuZCBtb2RpZnlpbmcg
wdHdvIGVudmVsb3BlcyB3aGljaCBhcmUgYXR0YWNoZWQgdG8gc2F3dG9vdGggaW5z
wdHJ1bWVudHMuXHBhciANXHBhcmRccGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFp
wbiBcczNcbGkzNjAgXGJcZjE2XGZzMjggdGFfcGl0Y2hub3RlcyBbPHNhbXBsZSBm
waWxlPiBbPGR1cmF0aW9uPl1dXHBhciANXHBhciANXHBhcmRccGxhaW4gXHM0XGxp
wNzIwIFxmMTYgVGhpcyBwcm9ncmFtIGxvYWRzIGFuZCBwbGF5cyB0aGUgQUlGRiBz
wYW1wbGUgZmlsZSBhdCBzZXZlcmFsIGRpZmZlcmVudCBwaXRjaGVzLiBJdCBkb2Vz
wIHRoaXMgYnkgc2VsZWN0aW5nIGEgTUlESSBub3RlIG51bWJlciwgd2hpY2ggdGhl
wIGF1ZGlvIGZvbGlvIG1hcHMgdG8gYSBmcmVxdWVuY3kuXHBhciANXHBhcmRccGxh
waW4gXGYxNiBccGFyIA1ccGFyZFxwbGFpbiBcczNcbGkzNjAgXGJcZjE2XGZzMjgg
wdGFfc3Bvb2xccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBsYWlu
wIFxzNFxsaTcyMCBcZjE2IA1Vc2VzIHRoZSBtdXNpYy5saWIgc291bmQgc3Bvb2xl
wciB0byBmaWxsIGJ1ZmZlcnMsIHBhcnNlIGluZm9ybWF0aW9uIGluIHRoZSBidWZm
wZXJzLCBzaWduYWwgb3VyIHRhc2sgd2hlbiBhIGJ1ZmZlciBoYXMgYmVlbiBleGhh
wdXN0ZWQsIGFuZCByZWZpbGwgdGhlIGJ1ZmZlcnMuICBVc2UgdGhpcyBzYW1wbGUg
wY29kZSBhcyBhIGJhc2lzIGZvciBkZXZlbG9waW5nIHlvdXIgb3duIHJvdXRpbmVz
wIGZvciBwbGF5aW5nIGxhcmdlIHNhbXBsZWQgZmlsZXMsDSBvciBoYW5kbGluZyBv
wdGhlciBraW5kcyBvZiBidWZmZXJlZCBkYXRhLlxwYXIgDVxwYXJkXHBsYWluIFxm
wMTYgXHBhciANXHBhcmRccGxhaW4gXHMzXGxpMzYwIFxiXGYxNlxmczI4IHRhX3N3
wZWVwc1xwYXIgDVxwYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxhaW4gXHM0
wXGxpNzIwIFxmMTYgVGhpcyBwcm9ncmFtIHF1aWNrbHkgbW9kdWxhdGVzIHRoZSBh
wbXBsaXR1ZGUgYW5kIGZyZXF1ZW5jeSBvZiBhIHNhd3Rvb3RoIGluc3RydW1lbnQg
wdmlhIHR3ZWFraW5nIHRoZSBjb250cm9sIGtub2JzIHJlcGVhdGVkbHkuXHBhciAN
wXHBhcmRccGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFpbiBcczNcbGkzNjAgXGJc
wZjE2XGZzMjggdGFfdGltZXJccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxw
wYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2IFRoaXMgcHJvZ3JhbSBzaG93cyBob3cg
wdG8gZXhhbWluZSBhbmQgY2hhbmdlIHRoZSByYXRlIG9mIHRoZSBhdWRpbyBjbG9j
way4gIEl0IGRlbW9uc3RyYXRlcyB1c2Ugb2YgY3VlcyB0byBzaWduYWwgeW91ciB0
wYXNrIGF0IGEgc3BlY2lmaWMgdGltZS4gSXQgYWxzbyBkZW1vbnN0cmF0ZXMgaG93
wIHRoZSBhdWRpbyBmb2xpbyBkZWFscyB3aXRoIGJhZCBhdWRpbyByYXRlIHZhbHVl
wcy5ccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBsYWluIFxzM1xs
waTM2MCBcYlxmMTZcZnMyOCB0YV90dW5pbmdccGFyIA1ccGFyZFxwbGFpbiBcZjE2
wIFxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2IFRoaXMgcHJvZ3JhbSBk
wZW1vbnN0cmF0ZXMgaG93IHRvIGNyZWF0ZSBhIHR1bmluZyB0YWJsZSwgaG93IHRv
wIGNyZWF0ZSBhIHR1bmluZywgYW5kIGhvdyB0byBhcHBseSBhIHR1bmluZyB0byBh
wbiBpbnN0cnVtZW50LlxwYXIgDVxwYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRc
wcGxhaW4gXHMzXGxpMzYwIFxiXGYxNlxmczI4IHRhX3R3ZWFra25vYnMgPGRzcCBp
wbnN0cnVtZW50PlxwYXIgDVxwYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxh
waW4gXHM0XGxpNzIwIFxmMTYgDVRoaXMgcHJvZ3JhbSBmaW5kcyB0aGUgbmFtZXMg
wb2YgYWxsIGtub2JzIG9uIGFuIGluc3RydW1lbnQgYW5kIHR3ZWFrcyB0aGVtIHRv
wIE5VTVNURVBTICogKG51bWJlciBvZiBrbm9icykgcG9zc2libGUgcGVybXV0YXRp
wb25zLiBUaGlzIHByb2dyYW0gZGVtb25zdHJhdGVzIGhvdyB0byBmaW5kIGFuZCB0
wd2VhayBrbm9icyBvbiBhbiBpbnN0cnVtZW50LCBhbmQgaXMgdXNlZnVsIGZvciB0
wZXN0aW5nIGluc3RydW1lbnQgdGVtcGxhdGVzLlxwYXIgDVxwYXJkXHBsYWluIFxm
wMTYgXHBhciANXHBhcmRccGxhaW4gXHMzXGxpMzYwIFxiXGYxNlxmczI4IHRzY19z
wb3VuZGZ4XHBhciANXHBhcmRccGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFpbiBc
wczRcbGk3MjAgXGYxNiBEZW1vbnN0cmF0ZSB1c2Ugb2YgU2NvcmVDb250ZXh0IGFz
wIGEgc2ltcGxlIHNvdW5kIGVmZmVjdHMgbWFuYWdlci4gVGhpcyBnaXZlcyB5b3Ug
wZHluYW1pYyB2b2ljZSBhbGxvY2F0aW9uLCBhbmQgYSBzaW1wbGUgTUlESS1saWtl
wIGludGVyZmFjZS5ccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBs
wYWluIFxzMiBcYlxmMTZcZnMyOFx1bCBFeGFtcGxlczpBdWRpbzpBZHZhbmNlZF9T
wb3VuZF9QbGF5ZXJccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBs
wYWluIFxzM1xsaTM2MCBcYlxmMTZcZnMyOCB0c3BfYWxnb3JpdGhtaWNccGFyIA1c
wcGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2
wIA1HaXZlbiBhIGxvbmcgc291bmQgZmlsZSB3aXRoIHNldmVyYWwgbWFya2VycyBk
wZWZpbmVkIHRoZXJlaW4sIHRoaXMgcHJvZ3JhbSBkZW1vbnN0cmF0ZXMgaW50ZXJh
wY3RpdmUgQUlGRiBzb3VuZCBicmFuY2hpbmcuICBUaGUgdGVjaG5pcXVlIHVzZWQg
wdG8gaW1wbGVtZW50IHRoaXMgc2VxdWVuY2UgaW52b2x2ZXMgdGhlIHVzZSBvZiBz
wdGF0aWMgYnJhbmNoZXMsIHdoZXJlIG9uZSBzZWdtZW50IGFsd2F5cyBsZWFkcyBp
wbg10byBhbm90aGVyLCAoZS5nLiBhZnRlciBwbGF5aW5nIHRoZSAxc3QgZW5kaW5n
wIGFsd2F5cyBnb2VzIGJhY2sgdG8gdGhlIGxvb3Agc2VnbWVudCksIGFuZCBkZWNp
wc2lvbiBmdW5jdGlvbnMgd2hlcmUgYSBjb25kaXRpb25hbCBicmFuY2hpbmcgaXMg
wcmVxdWlyZWQgKGUuZy4gdGhlIGVuZCBvZiB0aGUgbG9vcCBzZWdtZW50IGVpdGhl
wciBnb2VzIHRvIHRoZSAxc3Qgb3IgMm5kIGVuZGluZykuXHBhciANXHBhcmRccGxh
waW4gXHMzXGxpMzYwIFxiXGYxNlxmczI4IFxwYXIgDXRzcF9yb29tc1xwYXIgDVxw
wYXJkXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxhaW4gXHM0XGxpNzIwIFxmMTYg
wDUNyZWF0ZXMgYSB0aHJlYWQgdG8gcGxheWJhY2sgYSBzb3VuZCB0cmFjayBiYXNl
wZCBvbiBhIGdsb2JhbCByb29tIHZhcmlhYmxlIGdSb29tLiAgVGhlIHNvdW5kdHJh
wY2sgdGhyZWFkLCBTb3VuZHRyYWNrLCB1c2VzIHRoZSBhZHZhbmNlZCBzb3VuZCBw
wbGF5ZXIgdG8gcGxheSBhIHVuaXF1ZSBzb3VuZCBmaWxlIGZvciBlYWNoIHJvb20u
wIFdoZW4gdGhlIG1haW4gdGFzayBjaGFuZ2VzIHJvb21zLCB0aGUgc291bmR0cmFj
wayB0aHJlYWQgYWRhcHRzIHQNaGUgc291bmR0cmFjayB0byB0aGUgY2hhbmdlIGlu
wIHJvb20gYXQgYSBtdXNpY2FsbHkgY29udmVuaWVudCBsb2NhdGlvbi5ccGFyIA1c
wcGFyIA1ccGFyZFxwbGFpbiBcczNcbGkzNjAgXGJcZjE2XGZzMjggdHNwX3Nwb29s
wc291bmRmaWxlIDxzb3VuZCBmaWxlPiBbPG51bSByZXBlYXRzPl1ccGFyIA1ccGFy
wZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2IFBs
wYXlzIGFuIEFJRkYgc291bmQgZmlsZSB1c2luZyBhIHRocmVhZCB0byBtYW5hZ2Ug
wcGxheWJhY2suXHBhciANXHBhcmRccGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFp
wbiBcczNcbGkzNjAgXGJcZjE2XGZzMjggdHNwX3N3aXRjaGVyXHBhciANXHBhcmRc
wcGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFpbiBcczRcbGk3MjAgXGYxNiBMb29w
wcyBvbmUgb2YgdGhyZWUgc291bmQgZmlsZXMgb2ZmIG9mIGRpc2MuIFRoZSB1c2Vy
wIGNhbiBzZWxlY3QgYSBkaWZmZXJlbnQgc291bmQgdG8gbG9vcCBieSBwcmVzc2lu
wZyB0aGUgQSwgQiwgb3IgQyBidXR0b25zIG9uIHRoZSBjb250cm9sIHBhZC4gVGhl
wIGxhc3QgYnV0dG9uIHByZXNzZWQgY29ycmVzcG9uZHMgdG8gdGhlIHNvdW5kIGJl
waW5nIHBsYXllZC5ccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBs
wYWluIFxzMiBcYlxmMTZcZnMyOFx1bCBFeGFtcGxlczpBdWRpbzpDb2FsX1JpdmVy
wXHBhciANXHBhcmRccGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFpbiBcczNcbGkz
wNjAgXGJcZjE2XGZzMjggQ29hbFJpdmVyXHBhciANXHBhcmRccGxhaW4gXGYxNiBc
wcGFyIA1ccGFyZFxwbGFpbiBcczRcbGk3MjAgXGYxNiBUaGlzIHByb2dyYW0gcGxh
weXMgYSBNSURJIGZpbGUgdXNpbmcgSnVnZ2xlciBhbmQgU2NvcmUgdG9vbGJveFxw
wYXIgDWZyb20gdGhlIG11c2ljLmxpYiBhbmQgYXVkaW8gZm9saW8sIGFuZCBkZW1v
wbnN0cmF0ZXMgc3BlY2lhbCBNSURJXHBhciANaW50ZXJwcmV0ZXIgZnVuY3Rpb25z
wLlxwYXIgDVxwYXIgDVRoZSBDb2FsUml2ZXIucGltYXAgZmlsZSByZWZlcnMgdG8g
wc29tZSBBSUZGIHNhbXBsZXMgd2hpY2ggd2VyZSBpbmNsdWRlZCBpbiB0aGUgIkFJ
wRkYgU2FtcGxlcyIgZm9sZGVyLiAgSXQgaXMgbmVjZXNzYXJ5IHRvIGNvcHkgdGhl
wICJBSUZGIFNhbXBsZXMiIGZvbGRlciBpbnRvIHRoZSByZW1vdGUgZm9sZGVyIHRv
wIHVzZSB0aGVtIGluIHRoaXMgcHJvZ3JhbS5ccGFyIA1ccGFyIA1ccGFyZFxwbGFp
wbiBcczIgXGJcZjE2XGZzMjhcdWwgRXhhbXBsZXM6QXVkaW86RHJ1bUJveFxwYXIg
wDVxwYXJkXHBsYWluIFxzM1xsaTM2MCBcYlxmMTZcZnMyOCBccGFyIA1kcnVtYm94
wIDxQSU1hcD5ccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBsYWlu
wIFxzNFxsaTcyMCBcZjE2IFRoaXMgcHJvZ3JhbSBsb2FkcyBhbmQgcGxheXMgdXAg
wdG8gZWlnaHQgcmh5dGhtIHNvdW5kcyBpbiBhIHJlcGVhdGluZyBtZWFzdXJlIG9m
wIHNpeHRlZW4gYmVhdHMuIFVzZSB0aGUgRC1wYWQgYW5kIHRoZSBBIGJ1dHRvbiB0
wbyBwbGFjZSBvciByZW1vdmUgYSBzb3VuZCBmcm9tIGEgc3BlY2lmaWMgcG9pbnQg
waW4gdGhlIHJoeXRobS5ccGFyIA1ccGFyIA17XGIgPFBJTWFwPn0gaXMgdGhlIHBh
wdGggYW5kIGZpbGVuYW1lIG9mIGEgUElNYXAgZmlsZSB0byB1c2UuIEEgc3RhbmRh
wcmQgImRydW1ib3gucGltYXAiIGlzIHByb3ZpZGVkLCBzbyB0cnkgdXNpbmcgZHJ1
wbWJveC5waW1hcCBhcyB0aGUgYXJndW1lbnQgdG8gZHJ1bWJveC5ccGFyIA1ccGFy
wIA1ccGFyZFxwbGFpbiBcczIgXGJcZjE2XGZzMjhcdWwgRXhhbXBsZXM6QXVkaW86
wSnVnZ2xlclxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2IFxwYXIgDVxw
wYXJkXHBsYWluIFxzM1xsaTM2MCBcYlxmMTZcZnMyOCB0al9jYW5vbiA8UElNYXA+
wXHBhciANXHBhcmRccGxhaW4gXGYxNiBccGFyIA1ccGFyZFxwbGFpbiBcczRcbGk3
wMjAgXGYxNiBUaGlzIHByb2dyYW0gc2hvd3MgaG93IHRvIGNyZWF0ZSBhbmQgcGxh
weSBhIHNpbXBsZSBjYW5vbiB1c2luZyB0aGUganVnZ2xlciBhbmQgc2NvcmUtcGxh
weWluZyByb3V0aW5lcy5ccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJk
wXHBsYWluIFxzM1xsaTM2MCBcYlxmMTZcZnMyOCB0al9tdWx0aVxwYXIgDVxwYXJk
wXHBsYWluIFxmMTYgXHBhciANXHBhcmRccGxhaW4gXHM0XGxpNzIwIFxmMTYgVGhp
wcyBwcm9ncmFtIHRlc3RzIHRoZSBqdWdnbGVyIHVzaW5nIG5vbi1tdXNpY2FsIGV2
wZW50cyBhbmQgc29mdHdhcmUtYmFzZWQgInRpbWluZy4iICBJdCBjb25zdHJ1Y3Rz
wIHR3byBzeW50aGV0aWMgc2VxdWVuY2VzIGFuZCBjcmVhdGVzIGEgY29sbGVjdGlv
wbiBiYXNlZCBvbiB0aGVzZSB0d28gc2VxdWVuY2VzLiBJdCB0aGVuDSAicGxheXMi
wIHRoZSBjb2xsZWN0aW9uIHZpYSBhIHNpbXBsZSBwcmludCBmdW5jdGlvbiwgcHJv
wY2Vzc2VkIGF0IHRoZSB0aW1lIG9mIGVhY2ggZXZlbnQgaW4gZWFjaCBzZXF1ZW5j
wZS5ccGFyIA1ccGFyZFxwbGFpbiBcZjE2IFxwYXIgDVxwYXJkXHBsYWluIFxzM1xs
waTM2MCBcYlxmMTZcZnMyOCB0al9zaW1wbGVccGFyIA1ccGFyZFxwbGFpbiBcZjE2
wIFxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2IFRoaXMgcHJvZ3JhbSB0
wZXN0cyB0aGUganVnZ2xlciB1c2luZyBub24tbXVzaWNhbCBldmVudHMgYW5kIHNv
wZnR3YXJlLWJhc2VkICJ0aW1pbmcuIiAgSXQgY29uc3RydWN0cyB0d28gc3ludGhl
wdGljIHNlcXVlbmNlcyBhbmQgInBsYXlzIiB0aGUgc2VxdWVuY2VzIHZpYSBhIHNp
wbXBsZSBwcmludCBmdW5jdGlvbiwgcHJvY2Vzc2VkIGF0IHRoZSB0aW1lIG9mIGVh
wY2ggZXZlbnQgaW4gZWFjaA0gc2VxdWVuY2UuXHBhciANXHBhcmRccGxhaW4gXHMy
wIFxiXGYxNlxmczI4XHVsIFxwYXIgDUV4YW1wbGVzOkF1ZGlvOlBhdGNoRGVtb1xw
wYXIgDVxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2IFRoaXMgZGlyZWN0
wb3J5IGNvbnRhaW5zIHNhbXBsZSB0ZXh0IGZpbGVzIHdoaWNoIGNhbiBiZSBwcm92
waWRlZCBhcyBpbnB1dCB0byB0aGUgcGF0Y2hkZW1vIGNvbW1hbmQuICBUaGUgcGF0
wY2hkZW1vIGNvbW1hbmQgYWxsb3dzIHlvdSB0byBleHBlcmltZW50IHdpdGggRFNQ
wIGluc3RydW1lbnRzIGJ5IGNyZWF0aW5nIHBhdGNoIGZpbGVzIHdoaWNoIGRlc2Ny
waWJlIA1ob3cgdG8gYXR0YWNoIHRoZW0gdG8gb25lIGFub3RoZXIuICBUaGUgaW5w
wdXQgZmlsZSBmb3JtYXQgdG8gcGF0Y2hkZW1vIGFyZSBkb2N1bWVudGVkIGluIHRo
wZSB7XGIgM0RPIFRvb2xzIGZvciBTb3VuZCBEZXNpZ259IG1hbnVhbC5ccGFyIA1c
wcGFyIA1CZWdpbm5pbmcgd2l0aCB0aGUgUG9ydGZvbGlvIDIuNSByZWxlYXNlLCB0
waGUgcGF0Y2hkZW1vIGNvbW1hbmQgY2FuIGJlIGFjY2Vzc2VkIHZpYSB0aGUgZm9s
wbG93aW5nIGNvbW1hbmQgaW4gdGhlIDNETyBEZWJ1Z2dlcjpccGFyIA1ccGFyIA17
wXGYyMiAkYy9wYXRjaGRlbW8gPHBhdGNoIGZpbGU+fVxwYXIgDVxwYXIgDVRvIHVz
wZSB0aGVzZSBwYXRjaGVzLCBpdCBpcyBuZWNlc3NhcnkgdG8gY29weSB0aGUgIkFJ
wRkYgU2FtcGxlcyIgZm9sZGVyIGludG8gdGhlIHJlbW90ZSBmb2xkZXIuXHBhciAN
wXHBhciANXHBhcmRccGxhaW4gXHMyIFxiXGYxNlxmczI4XHVsIEV4YW1wbGVzOkF1
wZGlvOlNvbmdzOlxwYXIgDVxwYXIgDVxwYXJkXHBsYWluIFxzNFxsaTcyMCBcZjE2
wIFRoaXMgZGlyZWN0b3J5IGNvbnRhaW5zIGZpdmUgc2V0cyBvZiAuUElNYXAgYW5k
wIC5NRiAoTUlESSBmb3JtYXQpIGZpbGVzIHdoaWNoIGNhbiBiZSBwcm92aWRlZCBh
wcyBpbnB1dCB0byB0aGUgcGxheW1mIGNvbW1hbmQuICBUbyBoZWFyIHRoZXNlIHNv
wbmdzLCB1c2UgdGhlIGZvbGxvd2luZyBjb21tYW5kIGluIHRoZSAzRE8gRGVidWdn
wZXI6XHBhciANXHBhciANe1xmMjIgJGMvfXtcZjIyIHBsYXltZiA8TUlESSBmaWxl
wPiA8UElNYXAgZmlsZT4gWzxudW0gcmVwZWF0cz5dfVxwYXIgDVxwYXIgDVRvIGhl
wYXIgdGhlc2Ugc29uZ3MsIGl0IGlzIG5lY2Vzc2FyeSB0byBjb3B5IHRoZSAiQUlG
wRiBTYW1wbGVzIiBmb2xkZXIgaW50byB0aGUgcmVtb3RlIGZvbGRlci5ccGFyIA1c
WcGFyZCBcczRcbGk3MjAgXHBhciANfSB0
