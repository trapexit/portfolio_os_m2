#####################################
##
##  @(#) BuildExamples 96/02/21 1.3
##
#####################################

#
#
#	Script to build the entire examples folder or one specific folder.
#	If you wish to make an individual program, go to the directory where
#	it resides and build it there.
#
#	This script is provided for your convenience.
#
#	To build all examples, type "buildexamples all" in the worksheet.
#
#	To build a specific folder, specify that folders name as the argument
#
#
#

set ExitState {exit}

set CurrentDirectory `directory`

Set ExamplesLibDir	"{CurrentDirectory}Miscellaneous:ExamplesLib:"
Set GfxUtilsDir		"{CurrentDirectory}Graphics:GfxUtils:"

Set exit 0

If ( Not {1} )
	Echo
	Echo "Usage:: buildexamples <target>"
	Echo "target		specify either all, or example folder to build"

	Set exit {ExitState}
	Exit
End


#
#	Building the examples library first, in case of dependencies
#
Set TargetName ExamplesLib

Echo Building "{TargetName}.lib"...
Directory "{ExamplesLibDir}"

If ( `Exists "{TargetName}.make"` )
	Make "{TargetName}" -f "{TargetName}.make" > "{TargetName}.makeout"
	"{TargetName}.makeout"
	Delete -y "{TargetName}.makeout"

Else	  #  make file doesn't exist
	Echo 	Х# Unable to find makefile for "{TargetName}"
	Set exit {ExitState}
	Exit
End

Directory {CurrentDirectory}


#
#	Now, build the actual TargetName... build all or one
#
If ( {1} == "all" )
	For folder in `Files -d`

		Directory "{folder}"

		#
		#	Check to see if there are any makes at this level and build them
		#
		For file in `Files`
			set е1 ""
			(Evaluate "{file}" =~ /(┼)е1.make/ ) ии Dev:Null

			If ( {е1} )
				Set TargetName "{е1}"
				Echo Building "{TargetName}"...
				Make "{TargetName}" -f "{TargetName}.make" > "{TargetName}.makeout"
				"{TargetName}.makeout"
				Delete -y "{TargetName}.makeout"
			End
		End

		#
		#	Go down one more level and build stuff down there
		#
		For SecondLevelDir in `Files -d`

			If ( "{SecondLevelDir}" != ":Apps_Data:" AND "{SecondLevelDir}" != ":Objects:" )
				Directory "{SecondLevelDir}"

				For file in `Files`
					set е1 ""
					(Evaluate "{file}" =~ /(┼)е1.make/ ) ии Dev:Null

					If ( {е1} )
						Set TargetName "{е1}"
						Echo Building "{TargetName}"...
						Make "{TargetName}" -f "{TargetName}.make" > "{TargetName}.makeout"
						"{TargetName}.makeout"
						Delete -y "{TargetName}.makeout"
					End
				End

				#
				#	... one more level to go
				#
				For ThirdLevelDir in `Files -d`

					If ( "{ThirdLevelDir}" != ":Apps_Data:" AND "{ThirdLevelDir}" != ":Objects:" )

						Directory "{ThirdLevelDir}"
						For file in `Files`
							set е1 ""
							(Evaluate "{file}" =~ /(┼)е1.make/ ) ии Dev:Null

							If ( {е1} )
								Set TargetName "{е1}"
								Echo Building "{TargetName}"...
								Make "{TargetName}" -f "{TargetName}.make" > "{TargetName}.makeout"
								"{TargetName}.makeout"
								Delete -y "{TargetName}.makeout"
							End		# if е1
						End		# For File...
						Directory ::
					End		# If ThirdLevelDir ....
				End		# For ThirdLevelDir...

				Directory ::
			End		# If SecondLevelDir...
		End		# For SecondLevelDir...

		Directory ::

	End		# for folder...
Else		# if {1} == all

	If ( `Exists -d {1}` )
		Set folder {1}
		If ( "{folder}" != ":ExamplesLib:" AND "{folder}" != ":GfxUtils:" )

			Directory "{folder}"

			#
			#	Check to see if there are any makes at this level and build them
			#
			For file in `Files`
				set е1 ""
				(Evaluate "{file}" =~ /(┼)е1.make/ ) ии Dev:Null

				If ( {е1} )
					Set TargetName "{е1}"
					Echo Building "{TargetName}"...
					Make "{TargetName}" -f "{TargetName}.make" > "{TargetName}.makeout"
					"{TargetName}.makeout"
					Delete -y "{TargetName}.makeout"
				End
			End

			#
			#	Go down one more level and build stuff down there
			#
			For SecondLevelDir in `Files -d`

				If ( "{SecondLevelDir}" != ":Apps_Data:" AND "{SecondLevelDir}" != ":Objects:" )
					Directory "{SecondLevelDir}"

					For file in `Files`
						set е1 ""
						(Evaluate "{file}" =~ /(┼)е1.make/ ) ии Dev:Null

						If ( {е1} )
							Set TargetName "{е1}"
							Echo Building "{TargetName}"...
							Make "{TargetName}" -f "{TargetName}.make" > "{TargetName}.makeout"
							"{TargetName}.makeout"
							Delete -y "{TargetName}.makeout"
						End
					End

					#
					#	... one more level to go
					#
					For ThirdLevelDir in `Files -d`

						If ( "{ThirdLevelDir}" != ":Apps_Data:" AND "{ThirdLevelDir}" != ":Objects:" )

							Directory "{ThirdLevelDir}"
							For file in `Files`
								set е1 ""
								(Evaluate "{file}" =~ /(┼)е1.make/ ) ии Dev:Null

								If ( {е1} )
									Set TargetName "{е1}"
									Echo Building "{TargetName}"...
									Make "{TargetName}" -f "{TargetName}.make" > "{TargetName}.makeout"
									"{TargetName}.makeout"
									Delete -y "{TargetName}.makeout"
								End		# if е1
							End		# For File...
							Directory ::
						End		# If ThirdLevelDir ....
					End		# For ThirdLevelDir...

					Directory ::
				End		# If SecondLevelDir...
			End		# For SecondLevelDir...

		Directory ::

		End		#folder != ExamplesLib AND Lib3DO...
	Else		# if exists {1}
		Echo {1} does not exist
	End
End

beep -1F,30 e,30 C,60

set exit {ExitState}

exit
