\ @(#) randomhold.ins 96/03/11 1.16
\ $Id: randomhold.ins,v 1.6 1995/01/20 20:20:23 peabody Exp $
\ Instrument Template for RedNoise
\
\ Phil Burk
\ Copyright 3DO 1993
\ All Rights Reserved
\ Proprietary and Confidential

\\\	AUTODOC -class DSP -group Control_Signal -name randomhold.dsp
\\\	Generates random values and holds them.
\\\
\\\	  Description
\\\
\\\	    This instrument generates new random numbers at a given rate and holds
\\\	    steady until a new number is chosen. Think of it as a random stairstep
\\\	    function. This is handy for weird synthetic sound effects (e.g., random
\\\	    frequency values or pitch modulation of an oscillator).
\\\
\\\	  Knobs
\\\
\\\	    Frequency - AUDIO_SIGNAL_TYPE_OSC_FREQ
\\\	        Sample-and-hold frequency in Hertz. Range is -22050.0 to +22050.0.
\\\	        Default is 440.0. Controls how frequently a new random value is chosen.
\\\
\\\	    Amplitude - AUDIO_SIGNAL_TYPE_GENERIC_SIGNED
\\\	        -1.0 to +1.0, defaults to 1.0.
\\\
\\\	  Outputs
\\\
\\\	    Output
\\\	        -1.0 to +1.0
\\\
\\\	  Resources
\\\
\\\	    Ticks: 16
\\\
\\\	    Code: 13 words
\\\
\\\	    Data: 5 words
\\\
\\\	  Implementation
\\\
\\\	    V21
\\\
\\\	  See Also
\\\
\\\	    latch.dsp(@), noise.dsp(@), rednoise.dsp(@)

include? DFID_RANDOMHOLD function_ids.j

anew task-randomhold.ins

_BULLDOG
dspp{
ins{

DFID_RANDOMHOLD dspp-function-id !
$" randomhold.dsp" ins-name !

$ 8000 440 22050 */ KNOB_TYPE_OSC_FREQ ALLOC.KNOB.M2 Frequency
$ 7FFF KNOB_TYPE_RAW_SIGNED ALLOC.KNOB.M2 Amplitude
DRSC_TYPE_HW_NOISE CONNECT.HARDWARE  HardNoise
ALLOC.VARIABLE NoisePhase
ALLOC.VARIABLE HoldNoise
ALLOC.OUTPUT Output
16 ALLOC.TICKS

	NoisePhase _%A Frequency _A _+
	_BCC:	@HoldNoise
	HoldNoise _A HardNoise _A _MOVE   \ get new Noise target
	_NOP
_LABEL: @HoldNoise
	Output _A _= HoldNoise _A Amplitude _A _*

}ins
}dspp
