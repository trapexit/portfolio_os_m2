\ @(#) pulse_lfo.ins 96/05/14 1.21
\ $Id: pulse_lfo.ins,v 1.7 1995/01/20 21:27:52 peabody Exp $
\ Pulse LFO
\
\ Copyright 1994 3DO
\ Phil Burk
\
\ 940715 PLB Fix frequency calc opcode

\\\	AUTODOC -class DSP -group Control_Signal -name pulse_lfo.dsp
\\\	Pulse wave Low-Frequency Oscillator.
\\\
\\\	  Description
\\\
\\\	    This instrument is a pulse wave generator that uses extended precision
\\\	    arithmetic to give lower frequencies than pulse.dsp(@). It also has better
\\\	    resolution at the same frequency. The frequency of this instrument is 256
\\\	    times lower than its corresponding high frequency version. It is useful as a
\\\	    modulation source for controlling other instruments, or for bass instruments.
\\\
\\\	    This instrument is reset to the beginning of the positive Amplitude segment
\\\	    when started.
\\\
\\\	  Knobs
\\\
\\\	    Frequency - AUDIO_SIGNAL_TYPE_LFO_FREQ
\\\	        Oscillator frequency in Hertz. Ranges from -86.1 Hz to +86.1 Hz.
\\\	        Default is 17.2 Hz.
\\\
\\\	    Amplitude - AUDIO_SIGNAL_TYPE_GENERIC_SIGNED
\\\	        -1.0 to +1.0, defaults to 1.0.
\\\
\\\	    PulseWidth - AUDIO_SIGNAL_TYPE_GENERIC_SIGNED
\\\	        Level for comparator used to generate pulse wave. 0 gives a 50% duty
\\\	        cycle pulse wave. Positive values cause the positive portion of the
\\\	        pulse to be wider than the negative. Negative values cause the negative
\\\	        portion of the pulse to be wider than the positive. The range is -1.0
\\\	        to +1.0, defaults to 0.0.
\\\
\\\	  Outputs
\\\
\\\	    Output
\\\	        -1.0 to +1.0
\\\
\\\	  Resources
\\\
\\\	    Ticks: 19
\\\
\\\	    Code: 18 words
\\\
\\\	    Data: 6 words
\\\
\\\	  Implementation
\\\
\\\	    V21
\\\
\\\	  See Also
\\\
\\\	    sawtooth_lfo.dsp(@), square_lfo.dsp(@), triangle_lfo.dsp(@), pulse.dsp(@)

decimal
include? DFID_PULSE_LFO function_ids.j

anew task-pulse_lfo.dsp

_BULLDOG
dspp{
ins{

DFID_PULSE_LFO dspp-function-id !
$" pulse_lfo.dsp" ins-name !

$ 8000 2 10 */ KNOB_TYPE_LFO_FREQ ALLOC.KNOB.M2 Frequency
$ 7FFF KNOB_TYPE_RAW_SIGNED ALLOC.KNOB.M2 Amplitude
$ 0000 KNOB_TYPE_RAW_SIGNED ALLOC.KNOB.M2 PulseWidth
ALLOC.OUTPUT Output

\ phase accumulator - output Amplitude when Phase <= PulseWidth, -Amplitude otherwise
\ init at start to beginning of positive Amplitude segment
$ -8000 DRSC_AT_START ALLOC.VARIABLE.DEFAULT PhaseHigh
$     0 DRSC_AT_START ALLOC.VARIABLE.DEFAULT PhaseLow

19 ALLOC.TICKS

\ use double precision math for phase accumulator
	Frequency _A 8 _<<' _TRA                 \ extract low bits
	PhaseLow _%A ACCUME _+                   \ add low phase
	PhaseHigh _A _+C                         \ carry bit
	PhaseHigh _A _= Frequency _A $ 0080 _#   ACCUME  _*+

	PulseWidth _A ACCUME _CLIP _-            \ comparator

	ACCUME 16 _>>' _TRA             \ drag sign bit across ACCUME
	Output _A _= ACCUME Amplitude _A _XOR    \ 1's complement negate?

}ins
}dspp

