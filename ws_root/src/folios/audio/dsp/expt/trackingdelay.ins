\ $Id: trackingdelay.ins,v 1.2 1994/11/15 07:17:18 phil Exp $
\ trackingdelay - output mono samples to a delay line.
\ Track a delay offset to give variable delay time.
\
\ Copyright 1994 3DO
\ Phil Burk & Bill Barton
\
\ 940714 PLB Use I_Scratch to hold output to decouple mix from send.
\
\ X- needs CurrentOffset set to zero on START
\ O- measure ticks

include? DFID_FLANGER function_ids.j

anew task-flanger.ins

_RED
dspp{
ins{
DFID_FLANGER dspp-function-id !
$" flanger.dsp" ins-name !

ALLOC.IMEM     Input
ALLOC.OUTFIFO  OutFIFO
ALLOC.INFIFO   Tap0

\ static
ALLOC.IMEM    Phase
ALLOC.IMEM    OldVal
ALLOC.IMEM    NewVal
ALLOC.IMEM    CurrentOffset

\ dynamic
ALLOC.IMEM    Freq
ALLOC.IMEM    NumSamples

$ -8000 $ 7FFF 0 ALLOC.KNOB DelayOffset

$ -8000 $ 7FFF $ -4000 ALLOC.KNOB Tap0Send
$ -8000 $ 7FFF $ 3FFF ALLOC.KNOB OriginalSend

$ -8000 $ 7FFF $ 3FFF ALLOC.KNOB Tap0Mix
$ -8000 $ 7FFF $ 3FFF ALLOC.KNOB OriginalMix

ALLOC.OUTPUT   Output

100 ALLOC.TICKS \ %Q NOT REALLY

CurrentOffset  DINI_AT_START    0  INIT.RESOURCE  CurrentOffset_NAME 

\ negative feedback servo control of Freq
	DelayOffset _A CurrentOffset _A _CLIP _-
\ "multiply by 8" with clipping
	ACCUME ACCUME _CLIP _+  \ 2*
	ACCUME ACCUME _CLIP _+  \ 2*
	ACCUME ACCUME _CLIP _+  \ 2*
	Freq _A _= #$ 8000 ACCUME _-
\	ARMOut0 8 + _A Freq _A _MOVE  \ %T DEBUG
\	ARMOut0 9 + _A CurrentOffset _A _MOVE  \ %T DEBUG

\ Accumulate samples read-written in this pass.  Accumulate separately
\ to avoid clipping problem.
	NumSamples _A #$ 0001 _MOVE
	
\ ************************************************************************************
\ This version uses fixed point frequency that is shifted right by 1
\ allowing a range of 0->1.999.
\ The fractional phase is a 15 bit value so it is already
\ in the form needed for interpolation and can be used directly.
\
\ Phase goes from 0->$7FFF
\ If it goes minus, normalize the phase to 0=>$7FFF, take a sample.
\ If it goes minus twice, take two samples.
\ If it stays positive, just interpolate.

\ Calculate phase increment
	Phase _%A Freq _A _+
\ Determine whether to get 0,1,or 2 samples
	_BMI:	@Once
	_BCC:	@Interpolate
	
\ Get two samples
	NumSamples _%A _--              \ track how many we read
	OldVal _A Tap0 _A	_MOVE 	\ OldVal<-FIFO
	_JUMP: @GetNewVal
	
_LABEL: @Once
\ Get one sample
	Phase _%A #$ 8000	_-		\ wrap back to positive phase
	OldVal _A NewVal _A	_MOVE		\ OldVal<-newval
	
_LABEL: @GetNewVal
	NumSamples _%A _--              \ track how many we read
	NewVal _A Tap0 _A _MOVE		\ NewVal<-FIFO

_LABEL: @Interpolate
	Phase _A OldVal _A OldVal _A _*-		\ old*(frac-1)	= old*frac-old
	I_Scratch _A _= NewVal _A Phase _A ACCUME _*-  \ interpolate new value

\ Mix for delay line
	Tap0Send _A  ACCUME  _*
	OutFIFO _A   _= OriginalSend _A  Input _A  ACCUME _CLIP _*+
	
\ Mix Output
	Tap0Mix _A  I_Scratch _A  _*
	Output _A _= OriginalMix _A  Input _A  ACCUME _CLIP _*+
	
\ accumulate current offset in samples from original startup
	CurrentOffset _%A NumSamples _A _CLIP _+
}ins
}dspp
