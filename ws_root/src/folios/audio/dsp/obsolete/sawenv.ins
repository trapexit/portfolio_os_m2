\ @(#) sawenv.ins 95/06/02 1.6
\ $Id: sawenv.ins,v 1.5 1994/08/25 22:40:27 peabody Exp $
\ Envelope low level ramp function
\ controlling the amplitude of a sawtooth
\ Phil Burk
\ Copyright 1993 3DO

\\\	NOAUTODOC -private -class DSP -name sawenv.dsp
\\\	OBSOLETE - Sawtooth generator with amplitude envelope.
\\\
\\\	  Function
\\\
\\\	    This instrument is a simple sawtooth generator with a built-in envelope.
\\\	    It is a test instrument that we use to test the envelope code, but you may
\\\	    find it useful as a synthesizer voice.
\\\
\\\	  Knobs
\\\
\\\	    Frequency - If you call TweakRawKnob(), the units are phase increments, If
\\\	    you call TweakKnob(), the units are 16.16 fractional hertz.
\\\
\\\	    Amplitude - 0  =>  $7FFF
\\\
\\\	  Inputs
\\\
\\\	    None
\\\
\\\	  Outputs
\\\
\\\	    Output
\\\
\\\	  Input FIFOs
\\\
\\\	    None
\\\
\\\	  Output FIFOs
\\\
\\\	    None
\\\
\\\	  Resource
\\\
\\\	    Ticks = 29
\\\
\\\	    N memory = 35 words
\\\

include? DFID_SAWENV function_ids.j

anew task-sawenv.ins

_RED
if-translate-unders on
dspp{
ins{

DFID_SAWENV dspp-function-id !
$" sawenv.dsp" ins-name !


\ dspp-echo on

0 $ 2000 $ 0300 ALLOC.KNOB Frequency
CALC_DIVIDE_SR 0 0 Frequency set.knob.calc
0 $ 7FFF $ 6000 ALLOC.KNOB Amplitude
$ -8000 $ 7FFF $ 0000 ALLOC.KNOB Env_request
$ 0 $ 7FFF $ 0010 ALLOC.KNOB Env_incr
ALLOC.IMEM Env.phase
ALLOC.IMEM Env.target
ALLOC.IMEM Env.source
ALLOC.IMEM Env.current
ALLOC.IMEM SawPhase
ALLOC.OUTPUT Output
29 ALLOC.TICKS

\ do a simple envelope
create env-data
	0 , 0 ,
	200 , 32767 ,  \ attack
	500 , 20000 ,  \ decay, sustain
	1000 , 0 ,     \ release
\ env-data 4 2 2 0 $" Env" attach.envelope
env-data 4 $" Env" 0 new.envelope ( data numpoints $hookname -- )
2 2 0 set.envelope.sustain  ( start end time -- )

\ Compare Current and Requested Target
	Env_request _A Env.target _A _-
	_BNE: @UpdateTarget

\ Calculate new phase, phase ranges from 0-0.9999
	 Env.phase _%A Env_incr _A _CLIP _+

\ sample = new*frac + old*(1-frac)  ; crossfade interpolation
\        = new*frac - old*(frac-1)
\        = new*frac - (old*frac-old)
	ACCUME Env.source _A Env.source _A _*-
	Env.current _A _= Env.target _A Env.phase _A ACCUME	_*-
	_JUMP: @Done
	_NOP

_LABEL: @UpdateTarget
\ not calculating new value may cause some jitter on the envelope
	Env.source _A _= Env.current _A _TRL	\ pass through ACCUME
	Env.phase _A #$ 0000 _MOVE
	Env.target _A Env_request _A _MOVE
	_NOP
_LABEL: @Done

	SawPhase _%A Frequency _A _+   \ Calculate Sawtooth.
	Amplitude _A Env.current _A _*
	Output _A _= ACCUME SawPhase _A _*

}ins
}dspp
