\ @(#) square_lfo.ins 96/05/14 1.19
\ $Id: square_lfo.ins,v 1.6 1995/01/20 21:27:52 peabody Exp $
\ Square wave, extended precision frequency
\
\ Copyright 1994 3DO
\ Phil Burk

\\\	AUTODOC -class DSP -group Control_Signal -name square_lfo.dsp
\\\	Square wave Low-Frequency Oscillator.
\\\
\\\	  Description
\\\
\\\	    This instrument is a square wave generator that uses extended precision
\\\	    arithmetic to give lower frequencies than square.dsp(@). It also has better
\\\	    resolution at the same frequency. The frequency of this instrument is 256
\\\	    times lower than its corresponding high frequency version. It is useful as a
\\\	    modulation source for controlling other instruments, or for bass instruments.
\\\
\\\	    This instrument is reset to the beginning of the positive Amplitude segment
\\\	    when started.
\\\
\\\	  Knobs
\\\
\\\	    Frequency - AUDIO_SIGNAL_TYPE_LFO_FREQ
\\\	        Oscillator frequency in Hertz. Ranges from -86.1 Hz to +86.1 Hz.
\\\	        Default is 17.2 Hz.
\\\
\\\	    Amplitude - AUDIO_SIGNAL_TYPE_GENERIC_SIGNED
\\\	        -1.0 to +1.0, defaults to 1.0.
\\\
\\\	  Outputs
\\\
\\\	    Output
\\\	        -1.0 to +1.0
\\\
\\\	  Resources
\\\
\\\	    Ticks: 17
\\\
\\\	    Code: 16 words
\\\
\\\	    Data: 5 words
\\\
\\\	  Implementation
\\\
\\\	    V21
\\\
\\\	  See Also
\\\
\\\	    pulse_lfo.dsp(@), sawtooth_lfo.dsp(@), triangle_lfo.dsp(@), square.dsp(@)

decimal
include? DFID_SQUARE_LFO function_ids.j

anew task-square_lfo.dsp

dspp-echo off
_BULLDOG
dspp{
ins{
DFID_SQUARE_LFO dspp-function-id !
$" square_lfo.dsp" ins-name !

$ 8000 2 10 */ KNOB_TYPE_LFO_FREQ ALLOC.KNOB.M2 Frequency
$ 7FFF KNOB_TYPE_RAW_SIGNED ALLOC.KNOB.M2 Amplitude
ALLOC.OUTPUT Output

\ phase accumulator - output Amplitude when Phase >= 0, -Amplitude otherwise
\ init at start to beginning of positive Amplitude segment
0 DRSC_AT_START ALLOC.VARIABLE.DEFAULT PhaseHigh
0 DRSC_AT_START ALLOC.VARIABLE.DEFAULT PhaseLow

17 ALLOC.TICKS
\ use double precision math for phase accumulator
	Frequency _A 8 _<<' _TRA                 \ extract low bits
	PhaseLow _%A ACCUME _+                   \ add low phase
	PhaseHigh _A _+C                         \ carry bit
	PhaseHigh _A _= Frequency _A $ 0080 _#   ACCUME  _*+
	ACCUME 16 _>>' _TRA             \ drag sign bit across ACCUME
	Output _A _= ACCUME Amplitude _A _XOR    \ 1's complement negate?

}ins
}dspp


