\ @(#) sampler_cbd2_v1.ins 96/05/16 1.17
\
\ By: Phil Burk
\ Copyright 3DO 1992

\\\	AUTODOC -class DSP -group Sampled_Sound -name sampler_cbd2_v1.dsp
\\\	Variable-rate mono sample player with CBD2 2:1 decompression.
\\\
\\\	  Description
\\\
\\\	    Fixed-rate mono CBD2-format sample player.
\\\
\\\	    This instrument plays a sample, at variable rate, that has been previously
\\\	    compressed to the 8-bit CBD2 format. Run SoundHack or SquashSnd to compress
\\\	    the sample.
\\\
\\\	  Knobs
\\\
\\\	    SampleRate - AUDIO_SIGNAL_TYPE_SAMPLE_RATE
\\\	        SampleRate in Hertz. Range is 0.0 to 44100.0. Default is 44100.0.
\\\
\\\	    Amplitude - AUDIO_SIGNAL_TYPE_GENERIC_SIGNED
\\\	        -1.0 to 1.0, defaults to 1.0.
\\\
\\\	  Outputs
\\\
\\\	    Output
\\\
\\\	  Input FIFOs
\\\
\\\	    InFIFO
\\\
\\\	  Resources
\\\
\\\	    Ticks: 63
\\\
\\\	    Code: 57 words
\\\
\\\	    Data: 10 words
\\\
\\\	    FIFOs: 1
\\\
\\\	  Implementation
\\\
\\\	    V27
\\\
\\\	  Caveats
\\\
\\\	    Unlike most other sample player instruments this one doesn't support playing
\\\	    the sample above the system sample rate.
\\\
\\\	  See Also
\\\
\\\	    sampler_16_v1.dsp(@), sampler_adp4_v1.dsp(@), sampler_cbd2_v2.dsp(@),
\\\	    sampler_sqs2_v1.dsp(@)

include? DFID_SAMPLER_CBD2_V1 function_ids.j

\ 960515 PLB Changed FIFO to 8 bit granularity.
\            Reduced ticks 63->51, code 57->45, data 10->8

anew task-sampler_cbd2_v1.ins

_BULLDOG
dspp{
ins{

dspp-echo off
DFID_SAMPLER_CBD2_V1 dspp-function-id !

$" sampler_cbd2_v1.dsp" ins-name !

DRSC_INFIFO_SUBTYPE_8BIT ALLOC.INFIFO.SUBTYPE  InFIFO
ALLOC.VARIABLE   dc_previous  \ previously decoded sample
ALLOC.VARIABLE   dc_byte      \ byte shifted hi
ALLOC.VARIABLE   dc_cubed     \ x*x*x
ALLOC.VARIABLE   OldVal    \ previous for interpolation, expanded to 16 bits
ALLOC.VARIABLE   Phase
ALLOC.OUTPUT Output
$ 7FFF KNOB_TYPE_RAW_SIGNED ALLOC.KNOB.M2 Amplitude
$ 8000 KNOB_TYPE_SAMPLE_RATE ALLOC.KNOB.M2 SampleRate
51 ALLOC.TICKS

	InFIFO FIFOSTATUS+ _A _TRA	          \ check to see if any data in FIFO
	_BEQ: NODATA                          \ branch to be offset

\ Calculate phase increment
	Phase _%A SampleRate _A _+
\ Determine whether to decompress another sample
	_BPL:	Interpolate

	Phase _%A #$ 8000	_-		          \ wrap back to positive phase
	OldVal _A dc_previous _A	_MOVE	  \ save for interpolation
	dc_byte _A _= InFIFO _A _TRL

	_NOP   \ how many of these do we need?  !!!
	_NOP
\	_NOP
	ACCUME dc_byte _A _*  \ square data value
	dc_cubed _A _= ACCUME dc_byte _A _*   \ cube data value
	dc_byte _A #$ 0100 _AND               \ odd or even ?
	_BEQ: ExactMode

\ Delta mode, use previous_sample + x**3 as the next sample
	dc_cubed _A   dc_previous _%A   _CLIP _+
	_JUMP: Interpolate

\ Exact mode, use x**3 as the next sample
_LABEL: ExactMode
	dc_previous _A _= dc_cubed _A _TRL

\ ------------------------------------------
_LABEL: Interpolate
\ dc_previous is now the current sample
	Phase _A OldVal _A OldVal _A _*-	  \ old*(frac-1)	= old*frac-old
	dc_previous _A Phase _A ACCUME _*-	  \ interpolate output value

	Output _A _= ACCUME Amplitude _A _*	\  scale output

_LABEL: NODATA
}ins
}dspp
