\ @(#) multiply.ins 96/03/11 1.14
\ $Id: multiply.ins,v 1.9 1995/01/20 21:27:52 peabody Exp $
\ A*B
\
\ Phil Burk
\ Copyright 3DO 1993
\ All Rights Reserved
\ Proprietary and Confidential

\\\	AUTODOC -class DSP -group Arithmetic -name multiply.dsp
\\\	Multiplies two signed input signals (ring modulator).
\\\
\\\	  Description
\\\
\\\	    This is a 4-quadrant multiplier. It can be used as a single-channel mixer
\\\	    (gain * signal) or as a ring modulator (signal1 * signal2).
\\\
\\\	  Knobs
\\\
\\\	    InputA, InputB - AUDIO_SIGNAL_TYPE_GENERIC_SIGNED
\\\	        Signed inputs in the range of -1.0 to 1.0. Defaults to 1.0.
\\\
\\\	  Outputs
\\\
\\\	    Output
\\\	        Signed result of InputA * InputB in the range of -1.0 to 1.0.
\\\
\\\	  Resources
\\\
\\\	    Ticks: 6
\\\
\\\	    Code: 6 words
\\\
\\\	    Data: 3 words
\\\
\\\	  Implementation
\\\
\\\	    V20
\\\
\\\	  Caveats
\\\
\\\	    Multiplying -1.0 by -1.0 causes an overflow yielding a result of -1.0.
\\\	    Thus, if you multiply a signal by -1.0, it will pop if the signal also
\\\	    contains -1.0.
\\\
\\\	  See Also
\\\
\\\	    multiply_unsigned.dsp(@), multiply_accum.dsp(@), timesplus.dsp(@), Mixer(@)

include? DFID_MULTIPLY function_ids.j

anew task-multiply.ins

_RED
dspp{
ins{

DFID_MULTIPLY dspp-function-id !
$" multiply.dsp" ins-name !


ALLOC.OUTPUT Output
$ 7FFF KNOB_TYPE_RAW_SIGNED ALLOC.KNOB.M2 InputA
$ 7FFF KNOB_TYPE_RAW_SIGNED ALLOC.KNOB.M2 InputB
6 ALLOC.TICKS

	Output _A _= InputA _A InputB _A  _*

}ins
}dspp
