#####################################
##
##      @(#) BuildStreamTools 95/10/27 1.3
##
#####################################
#
#   File:       BuildStreamTools
#
#	Contains:	Script to build all of the data stream tools:
#
#	Usage:		BuildStreamTools { clean | "" } { root folder | "" }
#
#					"clean"		deletes all object files before
#								building everything
#
#       Example:        BuildStreamTools "" :StreamTools:Source
#
#
#####################################
#	Determine the tools root folder name. May be specified as
#	arg 2 on the command line, or will be prompted for if omitted.
#
	If "{2}" == ""
		Directory `getfilename -d -m "Select StreamTools:Source directory"`
	Else
		Directory "{2}"
	End
		
#
#	Delete all object files for a "clean" build completely from source
#
	If "{1}" == "clean"
		Begin
			# Save state of {Exit}
			Set saveExit {Exit}
			Set Exit 0

			# Delete object files in each directory.

			For toolDir in `Files -d`
				Delete -i "{toolDir}"objects:Å.o
			End
		
			# Restore the state of {Exit}
			Set Exit {saveExit}
	
		End ·· Dev:Null
	End

#
#	Build the tool found in each of the tool folders
#

	For ToolDir in `Files -d`

		# Get the tool name with version number

		(Evaluate "{ToolDir}" =~ /Å:(Å)¨1:/ ) ·· Dev:Null
		Set ToolName "{¨1}"

		Set ToolRootName "{ToolName}"
		(Evaluate "{ToolName}" =~ /¶¥(Å)¨1/ ) ·· Dev:Null
		if {¨1} != 
			Set ToolRootName "{¨1}"
		end
		# Build the tool

		Directory "{ToolDir}"
		If `exists -f "{ToolRootName}".make ³³ Dev:Null`
			Echo "Building {ToolName} ..."
	
            If !(`exists -d ":objects:"`)
                NewFolder :objects:
            End

			Make -f {ToolRootName}.make {ToolRootName} > {ToolRootName}.makeout
			{ToolRootName}.makeout
			Delete -i {ToolRootName}.makeout
		End

		Directory ::
	End


#
#	Say we're finished
#
	Echo
	Echo "...BuildStreamTools finished."
	Beep
