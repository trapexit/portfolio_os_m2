# Copyright (c) 1993-1996, an unpublished work by The 3DO Company.# All rights reserved. This material contains confidential# information that is the property of The 3DO Company. Any# unauthorized duplication, disclosure or use is prohibited.# # @(#) DelayDemo.script 96/07/02 1.2# Distributed with Portfolio V33.9## Demonstration of a common delay line versus a Delay Line Template. This# demonstration plays a three short sequences, each using a different patch. Each# patch is built using one of three different delay line techniques. The sound of# the instrument is created by a short duration synthetic tone, which is run# through the delay line and then repeated until the note is released.## The first sequence use a patch constructed from a delay line shared among all# of the instruments (using the DelayLine command). Notice how the sound of each# new note adds to the ever increasing cacophony. Also notice the pops created by# multiple instruments writing to the same delay line.## The patch used in the second sequence uses a Delay Line Template. Notice how# each note remains distinct and there are no audible pops. There's still a flaw# though: as instruments are reused to play other notes, the delay line in that# instrument still contains the signal from the last use of the instrument. This# is most audible in the chord change.## The patch used in the third sequence addresses this by using a Delay Line# Template with -ClearOnStop. This causes the delay line memory of each# instrument to be cleared when the instrument is stopped. When the instrument is# started again for another note, the previous note's signal has been erased.makepatch DelayLine.mp              DelayLine.patch              #makepatch DelayLineTemplate.mp      DelayLineTemplate.patch      #makepatch DelayLineTemplateClear.mp DelayLineTemplateClear.patch #playmf DelayDemo.mf DelayDemo.pimap